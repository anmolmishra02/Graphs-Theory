0 means no color not visited
1 means visited and marked Red
2 means visited and marked Blue
///////////////////////////////

#include<bits/stdc++.h>
using namespace std;
vector<int> graph[100005];
int*visited;
bool oddcycle=0;
void dfs(int cur,int parent,int color)
{
    visited[cur]=color;
    for(auto child:graph[cur])
    {
        if(visited[child]==0)
        {
            dfs(child,cur,3-color);
        }
        else if(child!=parent and color==visited[child])
        {
            oddcycle=1;
        }
    }
    
}

int main()
{
    int n,m;
    cin>>n>>m;
    visited=new int[n];
    for(int i=0;i<m;i++)
    {   int x,y;
       cin>>x>>y;
        graph[x].push_back(y);
        graph[y].push_back(x);
    }
    for(int i=0;i<n;i++)
    {
        visited[i]=0;
    }
    dfs(1,0,1);
    if(oddcycle)
    {
        cout<<" Not Bipartite";
    }
    else
    {
        cout<<" bipartite";
    }
}
